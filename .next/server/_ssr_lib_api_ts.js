"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_lib_api_ts";
exports.ids = ["_ssr_lib_api_ts"];
exports.modules = {

/***/ "(ssr)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiClient: () => (/* binding */ ApiClient),\n/* harmony export */   apiClient: () => (/* binding */ apiClient)\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:8000\" || 0;\nclass ApiClient {\n    constructor(){\n        this.baseUrl = API_BASE_URL;\n    }\n    async request(endpoint, options = {}) {\n        const url = `${this.baseUrl}${endpoint}`;\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers\n            },\n            ...options\n        };\n        const response = await fetch(url, config);\n        if (!response.ok) {\n            throw new Error(`API Error: ${response.status} ${response.statusText}`);\n        }\n        return response.json();\n    }\n    // Found Items\n    async createFoundItem(formData) {\n        const response = await fetch(`${this.baseUrl}/api/found`, {\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            throw new Error(`API Error: ${response.status}`);\n        }\n        return response.json();\n    }\n    async getFoundItems(params) {\n        const searchParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    searchParams.append(key, value.toString());\n                }\n            });\n        }\n        return this.request(`/api/found?${searchParams}`);\n    }\n    async getFoundItem(itemId) {\n        return this.request(`/api/found/${itemId}`);\n    }\n    async updateItemStatus(itemId, status) {\n        return this.request(`/api/found/${itemId}/status`, {\n            method: \"PUT\",\n            body: JSON.stringify({\n                status\n            })\n        });\n    }\n    // Lost Items\n    async createLostItem(data) {\n        return this.request(\"/api/lost\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async getMatches(lostItemId) {\n        return this.request(`/api/lost/${lostItemId}/matches`);\n    }\n    // Claims\n    async createClaim(data) {\n        return this.request(\"/api/claims\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n    async getClaims(params) {\n        const searchParams = new URLSearchParams();\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined) {\n                    searchParams.append(key, value.toString());\n                }\n            });\n        }\n        return this.request(`/api/claims?${searchParams}`);\n    }\n    async verifyClaim(claimId, data) {\n        return this.request(`/api/claims/${claimId}/verify`, {\n            method: \"PUT\",\n            body: JSON.stringify(data)\n        });\n    }\n    // Locations\n    async getLocations() {\n        return this.request(\"/api/locations\");\n    }\n    // Stats\n    async getStats() {\n        return this.request(\"/api/stats\");\n    }\n    // Auth (simplified for MVP)\n    async login(email, password = \"temp\") {\n        return this.request(\"/api/auth/login\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n    }\n    async register(data) {\n        return this.request(\"/api/auth/register\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    }\n}\nconst apiClient = new ApiClient();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/api.ts\n");

/***/ })

};
;